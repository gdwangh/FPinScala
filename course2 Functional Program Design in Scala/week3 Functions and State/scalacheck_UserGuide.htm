



<!DOCTYPE html>
<html lang="en" class=" is-copy-enabled">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    

    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-bbde3b2f5b4398fc37486b7dd931c73ffdc56c8ba3a9e5dfc2852dffe0d43f06.css" integrity="sha256-u947L1tDmPw3SGt92THHP/3FbIujqeXfwoUt/+DUPwY=" media="all" rel="stylesheet" />
    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-5ac9d46468150cbf78c38152681d1fae69132c6226bddb9483cd1f1ed7431e0a.css" integrity="sha256-WsnUZGgVDL94w4FSaB0frmkTLGImvduUg80fHtdDHgo=" media="all" rel="stylesheet" />
    
    
    
    

    <link as="script" href="https://assets-cdn.github.com/assets/frameworks-fda0e6b6a3864df864404821826631190d8d6099c0cafbddc23f64bda67319a6.js" rel="preload" />
    
    <link as="script" href="https://assets-cdn.github.com/assets/github-64d072b9de5c4bb94c1b7cbc3d98c443c0b3574511afdc7b4f7afc177e6f89f3.js" rel="preload" />

    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta name="viewport" content="width=device-width">
    
    <title>scalacheck/UserGuide.md at master Â· rickynils/scalacheck</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon-180x180.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="https://avatars1.githubusercontent.com/u/16779?v=3&amp;s=400" name="twitter:image:src" /><meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="rickynils/scalacheck" name="twitter:title" /><meta content="scalacheck - Property-based testing for Scala" name="twitter:description" />
      <meta content="https://avatars1.githubusercontent.com/u/16779?v=3&amp;s=400" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="rickynils/scalacheck" property="og:title" /><meta content="https://github.com/rickynils/scalacheck" property="og:url" /><meta content="scalacheck - Property-based testing for Scala" property="og:description" />
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="web-socket" href="wss://live.github.com/_sockets/NzIwMzI2MzpmMWY4ZDVkMjMzZmJjODhmZGM5OWNkYjc2YzBhNzhiNzo1YTBjOGRhMWFiZWUxN2MwZDQ3NWE0Nzc4YjJjMDJmMTljMmVkNGZlZjU3MzJiNmJhMTJiZTc2NDQ1MmVhMzE1--95b88505a54f5432e6acb8da9e88ba9dbccf39ac">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">
    <meta name="request-id" content="0E74F419:2CFCE:15838A11:57C780A3" data-pjax-transient>

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="0E74F419:2CFCE:15838A11:57C780A3" name="octolytics-dimension-request_id" /><meta content="7203263" name="octolytics-actor-id" /><meta content="gdwangh" name="octolytics-actor-login" /><meta content="415daa68f2f8a531a85b81063308c1d18bf17071034b84099f0bb4399a06b4d9" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />



  <meta class="js-ga-set" name="dimension1" content="Logged In">



        <meta name="hostname" content="github.com">
    <meta name="user-login" content="gdwangh">

        <meta name="expected-hostname" content="github.com">
      <meta name="js-proxy-site-detection-payload" content="ZWYzZjE3MGY2YmEyYjFmZDU0ZTUxYWQyODFiZTQ0OGVhZGM5MWI0Y2QyZTJhM2NiMTZmNDFlYzdkNWExNWNlMHx7InJlbW90ZV9hZGRyZXNzIjoiMTQuMTE2LjI0NC4yNSIsInJlcXVlc3RfaWQiOiIwRTc0RjQxOToyQ0ZDRToxNTgzOEExMTo1N0M3ODBBMyIsInRpbWVzdGFtcCI6MTQ3MjY5MjM5MH0=">


      <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#4078c0">
      <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

    <meta name="html-safe-nonce" content="3869b61d73c6a42dafc749ebb47ca16cf24f4065">
    <meta content="2dfadc615dc606221e378eae0a7ba5a4202de1cf" name="form-nonce" />

    <meta http-equiv="x-pjax-version" content="96e70f12d8bf7c75164770eb81182b41">
    

      
  <meta name="description" content="scalacheck - Property-based testing for Scala">
  <meta name="go-import" content="github.com/rickynils/scalacheck git https://github.com/rickynils/scalacheck.git">

  <meta content="16779" name="octolytics-dimension-user_id" /><meta content="rickynils" name="octolytics-dimension-user_login" /><meta content="1804055" name="octolytics-dimension-repository_id" /><meta content="rickynils/scalacheck" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="1804055" name="octolytics-dimension-repository_network_root_id" /><meta content="rickynils/scalacheck" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/rickynils/scalacheck/commits/master.atom" rel="alternate" title="Recent Commits to scalacheck:master" type="application/atom+xml">


      <link rel="canonical" href="https://github.com/rickynils/scalacheck/blob/master/doc/UserGuide.md" data-pjax-transient>
  </head>


  <body class="logged-in  env-production windows vis-public page-blob">
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>

    
    
    



        <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="28" version="1.1" viewBox="0 0 16 16" width="28"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path></svg>
</a>


        <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/rickynils/scalacheck/search" class="js-site-search-form" data-scoped-search-url="/rickynils/scalacheck/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
      <div class="header-search-scope">This repository</div>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
    </label>
</form></div>


      <ul class="header-nav float-left" role="navigation">
        <li class="header-nav-item">
          <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
            Pull requests
</a>        </li>
        <li class="header-nav-item">
          <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
            Issues
</a>        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com/" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
      </ul>

    
<ul class="header-nav user-nav float-right" id="user-links">
  <li class="header-nav-item">
    
    <a href="/notifications" aria-label="You have no unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s js-socket-channel js-notification-indicator" data-channel="tenant:1:notification-changed:7203263" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
        <span class="mail-status "></span>
        <svg aria-hidden="true" class="octicon octicon-bell" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"></path></svg>
</a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
       aria-label="Create newâ¦"
       data-ga-click="Header, create new, icon:add">
      <svg aria-hidden="true" class="octicon octicon-plus float-left" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"></path></svg>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>


  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="rickynils/scalacheck">This repository</span>
  </div>
    <a class="dropdown-item" href="/rickynils/scalacheck/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </div>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name tooltipped tooltipped-sw js-menu-target" href="/gdwangh"
       aria-label="View profile and more"
       data-ga-click="Header, show menu, icon:avatar">
      <img alt="@gdwangh" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/7203263?v=3&amp;s=40" width="20" />
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <div class="dropdown-menu dropdown-menu-sw">
        <div class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">gdwangh</strong>
        </div>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/gdwangh" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a>
          <a class="dropdown-item" href="/stars" data-ga-click="Header, go to starred repos, text:your stars">
            Your stars
          </a>
        <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
          Explore
        </a>
          <a class="dropdown-item" href="/integrations" data-ga-click="Header, go to integrations, text:integrations">
            Integrations
          </a>
        <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a>


        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a>

        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/logout" class="logout-form" data-form-nonce="2dfadc615dc606221e378eae0a7ba5a4202de1cf" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="fM1gN0crz0DsgC8xsnhMkrDDMXwI2pHVrC7936iCWTsYSdEHRarLoJ/NA/+qIM983xk68dlWsL+Qvhq7qmGzyw==" /></div>
          <button class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </li>
</ul>


    
  </div>
</div>


      


    <div id="start-of-content" class="accessibility-aid"></div>

      <div id="js-flash-container">
</div>


    <div role="main">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      
<div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
  <div class="container repohead-details-container">

    

<ul class="pagehead-actions">

  <li>
        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-form-nonce="2dfadc615dc606221e378eae0a7ba5a4202de1cf" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="r+mVto2r02cNO5fEgIXtIm3F8MBnl/vi3RUAUGPpZWzDcC4/x5qHi3NXKhHpIF7z+wNEutFknssvO8WA0WDUEw==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="1804055" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/rickynils/scalacheck/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target" role="button" tabindex="0" aria-haspopup="true"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
              <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"></path></svg>
              Watch
            </span>
          </a>
          <a class="social-count js-social-count"
            href="/rickynils/scalacheck/watchers"
            aria-label="60 users are watching this repository">
            60
          </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"></path></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"></path></svg>
                      Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"></path></svg>
                      Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/rickynils/scalacheck/unstar" class="starred" data-form-nonce="2dfadc615dc606221e378eae0a7ba5a4202de1cf" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="rKrkZn2VrVLr9O6bWQPQq4Xaboxmevxtw9lzas60WtGPq9YWYBsjyFCl0UGBOz2d9GRifQPBI45+HUFyrznFhQ==" /></div>
      <button
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar rickynils/scalacheck"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/rickynils/scalacheck/stargazers"
           aria-label="1050 users starred this repository">
          1,050
        </a>
</form>
    <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/rickynils/scalacheck/star" class="unstarred" data-form-nonce="2dfadc615dc606221e378eae0a7ba5a4202de1cf" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="snlHIhTz6rB59NLzkjNi8T9BWhw0LiE3GEhPmPGqfMTispPiHTmZpzjtK1m8QEAwo7MLZLSYTF7rtPvUVMi5Yg==" /></div>
      <button
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star rickynils/scalacheck"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"></path></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/rickynils/scalacheck/stargazers"
           aria-label="1050 users starred this repository">
          1,050
        </a>
</form>  </div>

  </li>

  <li>
          <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/rickynils/scalacheck/fork" class="btn-with-count" data-form-nonce="2dfadc615dc606221e378eae0a7ba5a4202de1cf" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="f+lGSISVtyBJ2zMfLS6aao/1JqZb9JbmaAm/MNHFoykga04oQdDcykd506lK1kOpj/J54NDM25y5NPQop9eE0w==" /></div>
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of rickynils/scalacheck to your account"
                aria-label="Fork your own copy of rickynils/scalacheck to your account">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg>
              Fork
            </button>
</form>
    <a href="/rickynils/scalacheck/network" class="social-count"
       aria-label="182 users are forked this repository">
      182
    </a>
  </li>
</ul>

    <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"></path></svg>
  <span class="author" itemprop="author"><a href="/rickynils" class="url fn" rel="author">rickynils</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/rickynils/scalacheck" data-pjax="#js-repo-pjax-container">scalacheck</a></strong>

</h1>

  </div>
  <div class="container">
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/rickynils/scalacheck" aria-selected="true" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /rickynils/scalacheck" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"></path></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/rickynils/scalacheck/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /rickynils/scalacheck/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg>
        <span itemprop="name">Issues</span>
        <span class="counter">40</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/rickynils/scalacheck/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /rickynils/scalacheck/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg>
      <span itemprop="name">Pull requests</span>
      <span class="counter">1</span>
      <meta itemprop="position" content="3">
</a>  </span>


    <a href="/rickynils/scalacheck/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /rickynils/scalacheck/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"></path></svg>
      Wiki
</a>

  <a href="/rickynils/scalacheck/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="pulse /rickynils/scalacheck/pulse">
    <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"></path></svg>
    Pulse
</a>
  <a href="/rickynils/scalacheck/graphs" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors /rickynils/scalacheck/graphs">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"></path></svg>
    Graphs
</a>

</nav>

  </div>
</div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    

<a href="/rickynils/scalacheck/blob/1a6f7b7202a5a6bee6b4c22af8527c9335816a2a/doc/UserGuide.md" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:4d06cee8420d3cbd5d39b805c8ad9e89 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <i>Branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.8_sonatype/doc/UserGuide.md"
               data-name="1.8_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.8_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.9_sonatype/doc/UserGuide.md"
               data-name="1.9_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.9_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.10.0_sonatype/doc/UserGuide.md"
               data-name="1.10.0_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.10.0_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.10.1_sonatype/doc/UserGuide.md"
               data-name="1.10.1_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.10.1_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.11.0_sonatype/doc/UserGuide.md"
               data-name="1.11.0_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.11.0_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.11.1_sonatype/doc/UserGuide.md"
               data-name="1.11.1_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.11.1_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.11.3_sonatype/doc/UserGuide.md"
               data-name="1.11.3_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.11.3_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.11.5_sonatype/doc/UserGuide.md"
               data-name="1.11.5_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.11.5_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.11.6_sonatype/doc/UserGuide.md"
               data-name="1.11.6_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.11.6_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.12.x/doc/UserGuide.md"
               data-name="1.12.x"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.12.x
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.12.2_sonatype/doc/UserGuide.md"
               data-name="1.12.2_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.12.2_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.12.3_sonatype/doc/UserGuide.md"
               data-name="1.12.3_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.12.3_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.12.4_sonatype/doc/UserGuide.md"
               data-name="1.12.4_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.12.4_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.12.5_sonatype/doc/UserGuide.md"
               data-name="1.12.5_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.12.5_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.13.0_sonatype/doc/UserGuide.md"
               data-name="1.13.0_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.13.0_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.13.1_sonatype/doc/UserGuide.md"
               data-name="1.13.1_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.13.1_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/1.13.2_sonatype/doc/UserGuide.md"
               data-name="1.13.2_sonatype"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                1.13.2_sonatype
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/issue192/doc/UserGuide.md"
               data-name="issue192"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                issue192
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/rickynils/scalacheck/blob/master/doc/UserGuide.md"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/rickynils/scalacheck/blob/scalacheck2/doc/UserGuide.md"
               data-name="scalacheck2"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                scalacheck2
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.13.2/doc/UserGuide.md"
              data-name="1.13.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.13.2">
                1.13.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.13.1/doc/UserGuide.md"
              data-name="1.13.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.13.1">
                1.13.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.13.0/doc/UserGuide.md"
              data-name="1.13.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.13.0">
                1.13.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.12.5/doc/UserGuide.md"
              data-name="1.12.5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.12.5">
                1.12.5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.12.4/doc/UserGuide.md"
              data-name="1.12.4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.12.4">
                1.12.4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.12.3/doc/UserGuide.md"
              data-name="1.12.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.12.3">
                1.12.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.12.2/doc/UserGuide.md"
              data-name="1.12.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.12.2">
                1.12.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.12.1/doc/UserGuide.md"
              data-name="1.12.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.12.1">
                1.12.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.12.0/doc/UserGuide.md"
              data-name="1.12.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.12.0">
                1.12.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.11.6/doc/UserGuide.md"
              data-name="1.11.6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.11.6">
                1.11.6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.11.5/doc/UserGuide.md"
              data-name="1.11.5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.11.5">
                1.11.5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.11.4/doc/UserGuide.md"
              data-name="1.11.4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.11.4">
                1.11.4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.11.3/doc/UserGuide.md"
              data-name="1.11.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.11.3">
                1.11.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.11.2/doc/UserGuide.md"
              data-name="1.11.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.11.2">
                1.11.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.11.1/doc/UserGuide.md"
              data-name="1.11.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.11.1">
                1.11.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.11.0/doc/UserGuide.md"
              data-name="1.11.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.11.0">
                1.11.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.10.1/doc/UserGuide.md"
              data-name="1.10.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.10.1">
                1.10.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.10.0/doc/UserGuide.md"
              data-name="1.10.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.10.0">
                1.10.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.10.0-b1/doc/UserGuide.md"
              data-name="1.10.0-b1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.10.0-b1">
                1.10.0-b1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.9/doc/UserGuide.md"
              data-name="1.9"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.9">
                1.9
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.8/doc/UserGuide.md"
              data-name="1.8"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.8">
                1.8
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.7/doc/UserGuide.md"
              data-name="1.7"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.7">
                1.7
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.6/doc/UserGuide.md"
              data-name="1.6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.6">
                1.6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.5/doc/UserGuide.md"
              data-name="1.5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.5">
                1.5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.4/doc/UserGuide.md"
              data-name="1.4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.4">
                1.4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.3/doc/UserGuide.md"
              data-name="1.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.3">
                1.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.2/doc/UserGuide.md"
              data-name="1.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.2">
                1.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.1.1/doc/UserGuide.md"
              data-name="1.1.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.1.1">
                1.1.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.1/doc/UserGuide.md"
              data-name="1.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.1">
                1.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.0/doc/UserGuide.md"
              data-name="1.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0">
                1.0
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/1.0-RC1/doc/UserGuide.md"
              data-name="1.0-RC1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0-RC1">
                1.0-RC1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/0.7/doc/UserGuide.md"
              data-name="0.7"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.7">
                0.7
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/0.2/doc/UserGuide.md"
              data-name="0.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.2">
                0.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/rickynils/scalacheck/tree/0.1/doc/UserGuide.md"
              data-name="0.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"></path></svg>
              <span class="select-menu-item-text css-truncate-target" title="0.1">
                0.1
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="btn-group float-right">
    <a href="/rickynils/scalacheck/find/master"
          class="js-pjax-capture-input btn btn-sm"
          data-pjax
          data-hotkey="t">
      Find file
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm zeroclipboard-button tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
  </div>
  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/rickynils/scalacheck"><span>scalacheck</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/rickynils/scalacheck/tree/master/doc"><span>doc</span></a></span><span class="separator">/</span><strong class="final-path">UserGuide.md</strong>
  </div>
</div>


  <div class="commit-tease">
      <span class="float-right">
        <a class="commit-tease-sha" href="/rickynils/scalacheck/commit/96d57d453e99c0224f4493bf14af80e9a79a87ce" data-pjax>
          96d57d4
        </a>
        <relative-time datetime="2016-08-07T02:02:23Z">Aug 7, 2016</relative-time>
      </span>
      <div>
        <img alt="@rvernica" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/241185?v=3&amp;s=40" width="20" />
        <a href="/rvernica" class="user-mention" rel="contributor">rvernica</a>
          <a href="/rickynils/scalacheck/commit/96d57d453e99c0224f4493bf14af80e9a79a87ce" class="message" data-pjax="true" title="Fix typo">Fix typo</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>4</strong>
         contributors
      </button>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="rickynils" href="/rickynils/scalacheck/commits/master/doc/UserGuide.md?author=rickynils"><img alt="@rickynils" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/16779?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="rvernica" href="/rickynils/scalacheck/commits/master/doc/UserGuide.md?author=rvernica"><img alt="@rvernica" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/241185?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="shanethehat" href="/rickynils/scalacheck/commits/master/doc/UserGuide.md?author=shanethehat"><img alt="@shanethehat" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/604650?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="msumner91" href="/rickynils/scalacheck/commits/master/doc/UserGuide.md?author=msumner91"><img alt="@msumner91" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/9221949?v=3&amp;s=40" width="20" /> </a>


    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <img alt="@rickynils" height="24" src="https://avatars1.githubusercontent.com/u/16779?v=3&amp;s=48" width="24" />
            <a href="/rickynils">rickynils</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@rvernica" height="24" src="https://avatars3.githubusercontent.com/u/241185?v=3&amp;s=48" width="24" />
            <a href="/rvernica">rvernica</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@shanethehat" height="24" src="https://avatars0.githubusercontent.com/u/604650?v=3&amp;s=48" width="24" />
            <a href="/shanethehat">shanethehat</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@msumner91" height="24" src="https://avatars3.githubusercontent.com/u/9221949?v=3&amp;s=48" width="24" />
            <a href="/msumner91">msumner91</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="btn-group">
      <a href="/rickynils/scalacheck/raw/master/doc/UserGuide.md" class="btn btn-sm " id="raw-url">Raw</a>
        <a href="/rickynils/scalacheck/blame/master/doc/UserGuide.md" class="btn btn-sm js-update-url-with-hash">Blame</a>
      <a href="/rickynils/scalacheck/commits/master/doc/UserGuide.md" class="btn btn-sm " rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="github-windows://openRepo/https://github.com/rickynils/scalacheck?branch=master&amp;filepath=doc%2FUserGuide.md"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"></path></svg>
        </a>

        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/rickynils/scalacheck/edit/master/doc/UserGuide.md" class="inline-form js-update-url-with-hash" data-form-nonce="2dfadc615dc606221e378eae0a7ba5a4202de1cf" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="9sBU9WGkTEI6ptwxkCXz2LuaQjVn/zvx3krLHr7HMWSrinLr+VwoqCez6+FlFACpQ2PjS1pF/ka1W7izDNOvBQ==" /></div>
          <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"></path></svg>
          </button>
</form>        <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="/rickynils/scalacheck/delete/master/doc/UserGuide.md" class="inline-form" data-form-nonce="2dfadc615dc606221e378eae0a7ba5a4202de1cf" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="6X3B4VANXaTNy8cfm60XqgoGIfLYLJ31WT8vQ7zyekhbJWSUkGrjLNCFCctLkZvIBGHlDzlxtQVTB/ujM8IwNw==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"></path></svg>
          </button>
</form>  </div>

  <div class="file-info">
      1016 lines (794 sloc)
      <span class="file-info-divider"></span>
    34.6 KB
  </div>
</div>

  
  <div id="readme" class="readme blob instapaper_body">
    <article class="markdown-body entry-content" itemprop="text"><h1><a id="user-content-scalacheck-user-guide" class="anchor" href="#scalacheck-user-guide" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>ScalaCheck User Guide</h1>

<h2><a id="user-content-what-is-scalacheck" class="anchor" href="#what-is-scalacheck" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>What is ScalaCheck?</h2>

<p>ScalaCheck is a tool for testing Scala and Java programs, based on property
specifications and automatic test data generation. The basic idea is that you
define a property that specifies the behaviour of a method or some unit of
code, and ScalaCheck checks that the property holds. All test data are
generated automatically in a random fashion, so you don't have to worry about
any missed cases.</p>

<h2><a id="user-content-a-quick-example" class="anchor" href="#a-quick-example" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>A quick example</h2>

<p>Fire up the Scala interpreter, with ScalaCheck in the classpath.</p>

<div class="highlight highlight-source-shell"><pre>$ scala -cp scalacheck.jar</pre></div>

<p>Import the <code>forAll</code> method, which creates universally quantified properties. We
will dig into the different property methods later on, but <code>forAll</code> is probably
the one you will use the most.</p>

<pre><code>scala&gt; import org.scalacheck.Prop.forAll
</code></pre>

<p>Define a property.</p>

<pre><code>scala&gt; val propConcatLists = forAll { (l1: List[Int], l2: List[Int]) =&gt;
  l1.size + l2.size == (l1 ::: l2).size }
</code></pre>

<p>Check the property!</p>

<pre><code>scala&gt; propConcatLists.check
+ OK, passed 100 tests.
</code></pre>

<p>OK, that seemed alright. Now define another property.</p>

<pre><code>scala&gt; val propSqrt = forAll { (n: Int) =&gt; scala.math.sqrt(n*n) == n }
</code></pre>

<p>Check it!</p>

<pre><code>scala&gt; propSqrt.check
! Falsified after 2 passed tests.
&gt; ARG_0: -1
&gt; ARG_0_ORIGINAL: -488187735
</code></pre>

<p>Not surprisingly, the property doesn't hold. The argument <code>-1</code> falsifies it.
You can also see that the argument <code>-488187735</code> falsifies the property. That
was the first argument ScalaCheck found, and it was then simplified to <code>-1</code>.
You'll read more about this later on.</p>

<h2><a id="user-content-concepts" class="anchor" href="#concepts" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Concepts</h2>

<h3><a id="user-content-properties" class="anchor" href="#properties" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Properties</h3>

<p>A <em>property</em> is the testable unit in ScalaCheck, and is represented by the
<code>org.scalacheck.Prop</code> class. There are several ways to create properties in
ScalaCheck, one of them is to use the <code>org.scalacheck.Prop.forAll</code> method
like in the example above. That method creates universally quantified properties
directly, but it is also possible to create new properties by combining other
properties, or to use any of the specialised methods in the <code>org.scalacheck.Prop</code>
object.</p>

<p><strong>Universally quantified properties</strong></p>

<p>As mentioned before, <code>org.scalacheck.Prop.forAll</code> creates universally
quantified properties. <code>forAll</code> takes a function as parameter, and creates a
property out of it that can be tested with the <code>check</code> method.  The function
should return <code>Boolean</code> or another property, and can take parameters of any
types, as long as there exist implicit <code>Arbitrary</code> instances for the types. By
default, ScalaCheck has instances for common types like <code>Int</code>, <code>String</code>,
<code>List</code>, etc, but it is also possible to define your own <code>Arbitrary</code> instances.
This will be described in a later section.</p>

<p>Here are some examples of properties defined with help of the
<code>org.scalacheck.Prop.forAll</code> method.</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.Prop.</span><span class="pl-v">forAll</span>

<span class="pl-k">val</span> <span class="pl-en">propReverseList</span> <span class="pl-k">=</span> forAll { <span class="pl-v">l</span>: <span class="pl-en">List</span>[<span class="pl-k">String</span>] <span class="pl-k">=&gt;</span> l.reverse.reverse <span class="pl-k">==</span> l }

<span class="pl-k">val</span> <span class="pl-en">propConcatString</span> <span class="pl-k">=</span> forAll { (<span class="pl-v">s1</span>: <span class="pl-k">String</span>, <span class="pl-v">s2</span>: <span class="pl-k">String</span>) <span class="pl-k">=&gt;</span>
  (s1 <span class="pl-k">+</span> s2).endsWith(s2)
}</pre></div>

<p>When you run <code>check</code> on the properties, ScalaCheck generates random
instances of the function parameters and evaluates the results, reporting any
failing cases.</p>

<p>You can also give <code>forAll</code> a specific data generator. See the following
example:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.</span><span class="pl-v">_</span>

<span class="pl-k">val</span> <span class="pl-en">smallInteger</span> <span class="pl-k">=</span> <span class="pl-en">Gen</span>.choose(<span class="pl-c1">0</span>,<span class="pl-c1">100</span>)

<span class="pl-k">val</span> <span class="pl-en">propSmallInteger</span> <span class="pl-k">=</span> <span class="pl-en">Prop</span>.forAll(smallInteger) { n <span class="pl-k">=&gt;</span>
  n <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> n <span class="pl-k">&lt;=</span> <span class="pl-c1">100</span>
}</pre></div>

<p><code>smallInteger</code> defines a <em>generator</em> that generates integers between 0 and 100,
inclusively. Generators will be described closer in a later section.
<code>propSmallInteger</code> simply specifies that each integer generated should be in
the correct range. This way of using the <code>forAll</code> method is good to use when
you want to control the data generation by specifying exactly which generator
that should be used, and not rely on a default generator for the given type.</p>

<p><strong>Conditional Properties</strong></p>

<p>Sometimes, a specification takes the form of an implication. In ScalaCheck,
you can use the implication operator <code>==&gt;</code>:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.Prop.</span>{<span class="pl-v">forAll</span>, <span class="pl-v">BooleanOperators</span>}

<span class="pl-k">val</span> <span class="pl-en">propMakeList</span> <span class="pl-k">=</span> forAll { <span class="pl-v">n</span>: <span class="pl-k">Int</span> <span class="pl-k">=&gt;</span>
  (n <span class="pl-k">&gt;=</span> <span class="pl-c1">0</span> <span class="pl-k">&amp;&amp;</span> n <span class="pl-k">&lt;</span> <span class="pl-c1">10000</span>) <span class="pl-k">==&gt;</span> (<span class="pl-en">List</span>.fill(n)(<span class="pl-s"><span class="pl-pds">"</span><span class="pl-pds">"</span></span>).length <span class="pl-k">==</span> n)
}</pre></div>

<p>Now ScalaCheck will only care for the cases when <code>n</code> is not negative. We
also filter out large numbers, since we don't want to generate huge lists.</p>

<p>If the implication operator is given a condition that is hard or impossible to
fulfill, ScalaCheck might not find enough passing test cases to state that the
property holds. In the following trivial example, all cases where <code>n</code> is
non-zero will be thrown away:</p>

<pre><code>scala&gt; import org.scalacheck.Prop.{forAll, BooleanOperators}

scala&gt; val propTrivial = forAll { n: Int =&gt;
     |  (n == 0) ==&gt; (n == 0)
     | }

scala&gt; propTrivial.check
! Gave up after only 4 passed tests. 500 tests were discarded.
</code></pre>

<p>It is possible to tell ScalaCheck to try harder when it generates test cases,
but generally you should try to refactor your property specification instead of
generating more test cases, if you get this scenario.</p>

<p>Using implications, we realise that a property might not just pass or fail, it
could also be undecided if the implication condition doesn't get fulfilled. In
the section about test execution, the different results of property evaluations
will be described in more detail.</p>

<p><strong>Combining Properties</strong></p>

<p>A third way of creating properties, is to combine existing properties into new ones.</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">val</span> <span class="pl-en">p1</span> <span class="pl-k">=</span> forAll(...)

<span class="pl-k">val</span> <span class="pl-en">p2</span> <span class="pl-k">=</span> forAll(...)

<span class="pl-k">val</span> <span class="pl-en">p3</span> <span class="pl-k">=</span> p1 <span class="pl-k">&amp;&amp;</span> p2

<span class="pl-k">val</span> <span class="pl-en">p4</span> <span class="pl-k">=</span> p1 <span class="pl-k">||</span> p2

<span class="pl-k">val</span> <span class="pl-en">p5</span> <span class="pl-k">=</span> p1 <span class="pl-k">==</span> p2

<span class="pl-k">val</span> <span class="pl-en">p6</span> <span class="pl-k">=</span> all(p1, p2) <span class="pl-c">// same as p1 &amp;&amp; p2</span>

<span class="pl-k">val</span> <span class="pl-en">p7</span> <span class="pl-k">=</span> atLeastOne(p1, p2) <span class="pl-c">// same as p1 || p2</span></pre></div>

<p>Here, <code>p3</code> will hold if and only if both <code>p1</code> and <code>p2</code> hold, <code>p4</code> will hold if
either <code>p1</code> or <code>p2</code> holds, and <code>p5</code> will hold if <code>p1</code> holds exactly when <code>p2</code>
holds and vice versa.</p>

<p><strong>Grouping properties</strong></p>

<p>Often you want to specify several related properties, perhaps for all methods
in a class. ScalaCheck provides a simple way of doing this, through the
<code>Properties</code> trait. Look at the following specifications of some of the
methods in the <code>java.lang.String</code> class:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.</span><span class="pl-v">_</span>

<span class="pl-k">object</span> <span class="pl-en">StringSpecification</span> <span class="pl-k">extends</span> <span class="pl-e">Properties</span>(<span class="pl-s"><span class="pl-pds">"</span>String<span class="pl-pds">"</span></span>) {
  <span class="pl-k">import</span> <span class="pl-v">Prop.</span><span class="pl-v">forAll</span>

  property(<span class="pl-s"><span class="pl-pds">"</span>startsWith<span class="pl-pds">"</span></span>) <span class="pl-k">=</span> forAll { (<span class="pl-v">a</span>: <span class="pl-k">String</span>, <span class="pl-v">b</span>: <span class="pl-k">String</span>) <span class="pl-k">=&gt;</span>
    (a<span class="pl-k">+</span>b).startsWith(a)
  }

  property(<span class="pl-s"><span class="pl-pds">"</span>endsWith<span class="pl-pds">"</span></span>) <span class="pl-k">=</span> forAll { (<span class="pl-v">a</span>: <span class="pl-k">String</span>, <span class="pl-v">b</span>: <span class="pl-k">String</span>) <span class="pl-k">=&gt;</span>
    (a<span class="pl-k">+</span>b).endsWith(b)
  }

  property(<span class="pl-s"><span class="pl-pds">"</span>substring<span class="pl-pds">"</span></span>) <span class="pl-k">=</span> forAll { (<span class="pl-v">a</span>: <span class="pl-k">String</span>, <span class="pl-v">b</span>: <span class="pl-k">String</span>) <span class="pl-k">=&gt;</span>
    (a<span class="pl-k">+</span>b).substring(a.length) <span class="pl-k">==</span> b
  }

  property(<span class="pl-s"><span class="pl-pds">"</span>substring<span class="pl-pds">"</span></span>) <span class="pl-k">=</span> forAll { (<span class="pl-v">a</span>: <span class="pl-k">String</span>, <span class="pl-v">b</span>: <span class="pl-k">String</span>, <span class="pl-v">c</span>: <span class="pl-k">String</span>) <span class="pl-k">=&gt;</span>
    (a<span class="pl-k">+</span>b<span class="pl-k">+</span>c).substring(a.length, a.length<span class="pl-k">+</span>b.length) <span class="pl-k">==</span> b
  }
}</pre></div>

<p>The <code>Properties</code> class contains a <code>main</code> method that can be used for simple
execution of the property tests. Compile and run the tests in the
following way:</p>

<div class="highlight highlight-source-shell"><pre>$ scalac -cp scalacheck.jar StringSpecification.scala

$ scala -cp scalacheck.jar:. StringSpecification
+ String.startsWith: OK, passed 100 tests.
+ String.endsWith: OK, passed 100 tests.
+ String.substring: OK, passed 100 tests.
+ String.substring: OK, passed 100 tests.</pre></div>

<p>You can also use the <code>check</code> method of the <code>Properties</code> class to
check all specified properties, just like for simple <code>Prop</code> instances.
In fact, <code>Properties</code> is a subtype of <code>Prop</code>, so you can use it just as if
it was a single property. That single property holds if and only if all
of the contained properties hold.</p>

<p>There is a <code>Properties.include</code> method you can use if you want to
group several different property collections into a single one. You
could for example create one property collection for your application
that consists of all the property collections of your individual classes:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">object</span> <span class="pl-en">MyAppSpecification</span> <span class="pl-k">extends</span> <span class="pl-e">Properties</span>(<span class="pl-s"><span class="pl-pds">"</span>MyApp<span class="pl-pds">"</span></span>) {
  include(<span class="pl-en">StringSpecification</span>)
  include(...)
  include(...)
}</pre></div>

<p><strong>Labeling Properties</strong></p>

<p>Sometimes it can be difficult to decide exactly what is wrong when a property
fails, especially if the property is complex, with many conditions. In such
cases, you can label the different parts of the property, so ScalaCheck can
tell you exactly what part is failing. Look at the following example, where
the different conditions of the property have been labeled differently:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.Prop.</span>{<span class="pl-v">forAll</span>, <span class="pl-v">BooleanOperators</span>}

<span class="pl-k">val</span> <span class="pl-en">complexProp</span> <span class="pl-k">=</span> forAll { (<span class="pl-v">m</span>: <span class="pl-k">Int</span>, <span class="pl-v">n</span>: <span class="pl-k">Int</span>) <span class="pl-k">=&gt;</span>
  <span class="pl-k">val</span> <span class="pl-en">res</span> <span class="pl-k">=</span> myMagicFunction(n, m)
  (res <span class="pl-k">&gt;=</span> m)    <span class="pl-k">:|</span> <span class="pl-s"><span class="pl-pds">"</span>result &gt; #1<span class="pl-pds">"</span></span> <span class="pl-k">&amp;&amp;</span>
  (res <span class="pl-k">&gt;=</span> n)    <span class="pl-k">:|</span> <span class="pl-s"><span class="pl-pds">"</span>result &gt; #2<span class="pl-pds">"</span></span> <span class="pl-k">&amp;&amp;</span>
  (res <span class="pl-k">&lt;</span> m <span class="pl-k">+</span> n) <span class="pl-k">:|</span> <span class="pl-s"><span class="pl-pds">"</span>result not sum<span class="pl-pds">"</span></span>
}</pre></div>

<p>We can see the label if we define <code>myMagicFunction</code> incorrectly and then
check the property:</p>

<pre><code>scala&gt; def myMagicFunction(n: Int, m: Int) = n + m
myMagicFunction: (Int,Int)Int

scala&gt; complexProp.check
! Falsified after 0 passed tests.
&gt; Label of failing property: "result not sum"
&gt; ARG_0: "0"
&gt; ARG_1: "0"
</code></pre>

<p>It is also possible to write the label before the conditions like this:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.Prop.</span>{<span class="pl-v">forAll</span>, <span class="pl-v">BooleanOperators</span>}

<span class="pl-k">val</span> <span class="pl-en">complexProp</span> <span class="pl-k">=</span> forAll { (<span class="pl-v">m</span>: <span class="pl-k">Int</span>, <span class="pl-v">n</span>: <span class="pl-k">Int</span>) <span class="pl-k">=&gt;</span>
  <span class="pl-k">val</span> <span class="pl-en">res</span> <span class="pl-k">=</span> myMagicFunction(n, m)
  (<span class="pl-s"><span class="pl-pds">"</span>result &gt; #1<span class="pl-pds">"</span></span>    <span class="pl-k">|:</span> res <span class="pl-k">&gt;=</span> m) <span class="pl-k">&amp;&amp;</span>
  (<span class="pl-s"><span class="pl-pds">"</span>result &gt; #2<span class="pl-pds">"</span></span>    <span class="pl-k">|:</span> res <span class="pl-k">&gt;=</span> n) <span class="pl-k">&amp;&amp;</span>
  (<span class="pl-s"><span class="pl-pds">"</span>result not sum<span class="pl-pds">"</span></span> <span class="pl-k">|:</span> res <span class="pl-k">&lt;</span> m <span class="pl-k">+</span> n)
}</pre></div>

<p>The labeling operator can also be used to inspect intermediate values
used in the properties, which can be very useful when trying to understand
why a property fails. ScalaCheck always presents the generated property
arguments (<code>ARG_0</code>, <code>ARG_1</code>, etc), but sometimes you need to quickly see
the value of an intermediate calculation. See the following example, which
tries to specify multiplication in a somewhat naive way:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.Prop.</span>{<span class="pl-v">forAll</span>, <span class="pl-v">BooleanOperators</span>, <span class="pl-v">all</span>}

<span class="pl-k">val</span> <span class="pl-en">propMul</span> <span class="pl-k">=</span> forAll { (<span class="pl-v">n</span>: <span class="pl-k">Int</span>, <span class="pl-v">m</span>: <span class="pl-k">Int</span>) <span class="pl-k">=&gt;</span>
  <span class="pl-k">val</span> <span class="pl-en">res</span> <span class="pl-k">=</span> n<span class="pl-k">*</span>m
  (<span class="pl-s"><span class="pl-pds">"</span>evidence = <span class="pl-pds">"</span></span> <span class="pl-k">+</span> res) <span class="pl-k">|:</span> all(
    <span class="pl-s"><span class="pl-pds">"</span>div1<span class="pl-pds">"</span></span> <span class="pl-k">|:</span> m <span class="pl-k">!=</span> <span class="pl-c1">0</span> <span class="pl-k">==&gt;</span> (res <span class="pl-k">/</span> m <span class="pl-k">==</span> n),
    <span class="pl-s"><span class="pl-pds">"</span>div2<span class="pl-pds">"</span></span> <span class="pl-k">|:</span> n <span class="pl-k">!=</span> <span class="pl-c1">0</span> <span class="pl-k">==&gt;</span> (res <span class="pl-k">/</span> n <span class="pl-k">==</span> m),
    <span class="pl-s"><span class="pl-pds">"</span>lt1<span class="pl-pds">"</span></span>  <span class="pl-k">|:</span> res <span class="pl-k">&gt;</span> m,
    <span class="pl-s"><span class="pl-pds">"</span>lt2<span class="pl-pds">"</span></span>  <span class="pl-k">|:</span> res <span class="pl-k">&gt;</span> n
  )
}</pre></div>

<p>Here we have four different conditions, each with its own label. Instead
of using the <code>&amp;&amp;</code> operator the conditions are combined in an equivalent
way by using the <code>Prop.all</code> method. The implication operators are used to
protect us from zero-divisions. A fifth label is added to the combined
property to record the result of the multiplication. When we check the
property, ScalaCheck tells us the following:</p>

<pre><code>scala&gt; propMul.check
! Falsified after 0 passed tests.
&gt; Labels of failing property:
"lt1"
"evidence = 0"
&gt; ARG_0: "0"
&gt; ARG_1: "0"
</code></pre>

<p>As you can see, you can add as many labels as you want to your property,
ScalaCheck will present them all if the property fails.</p>

<h3><a id="user-content-generators" class="anchor" href="#generators" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Generators</h3>

<p>Generators are responsible for generating test data in ScalaCheck, and are
represented by the <code>org.scalacheck.Gen</code> class. You need to know how to use this
class if you want ScalaCheck to generate data of types that are not supported
by default, or if you want to use the <code>forAll</code> method mentioned above, to state
properties about a specific subset of a type. In the <code>Gen</code> object, there are
several methods for creating new and modifying existing generators. We will
show how to use some of them in this section. For a more complete reference of
what is available, please see the API scaladoc.</p>

<p>A generator can be seen simply as a function that takes some generation
parameters, and (maybe) returns a generated value. That is, the type <code>Gen[T]</code>
may be thought of as a function of type <code>Gen.Params =&gt; Option[T]</code>. However, the
<code>Gen</code> class contains additional methods to make it possible to map generators,
use them in for-comprehensions and so on. Conceptually, though, you should
think of generators simply as functions, and the combinators in the <code>Gen</code>
object can be used to create or modify the behaviour of such generator
functions.</p>

<p>Let's see how to create a new generator. The best way to do it is to use the
generator combinators that exist in the <code>org.scalacheck.Gen</code> module. These can
be combined using a for-comprehension. Suppose you need a generator which
generates a tuple that contains two random integer values, one of them being at
least twice as big as the other. The following definition does this:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">val</span> <span class="pl-en">myGen</span> <span class="pl-k">=</span> <span class="pl-k">for</span> {
  n <span class="pl-k">&lt;</span><span class="pl-k">-</span> <span class="pl-en">Gen</span>.choose(<span class="pl-c1">10</span>,<span class="pl-c1">20</span>)
  m <span class="pl-k">&lt;</span><span class="pl-k">-</span> <span class="pl-en">Gen</span>.choose(<span class="pl-c1">2</span><span class="pl-k">*</span>n, <span class="pl-c1">500</span>)
} <span class="pl-k">yield</span> (n,m)</pre></div>

<p>You can create generators that picks one value out of a selection of values.
The following generator generates a vowel:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">val</span> <span class="pl-en">vowel</span> <span class="pl-k">=</span> <span class="pl-en">Gen</span>.oneOf(<span class="pl-c1">'A'</span>, <span class="pl-c1">'E'</span>, <span class="pl-c1">'I'</span>, <span class="pl-c1">'O'</span>, <span class="pl-c1">'U'</span>, <span class="pl-c1">'Y'</span>)</pre></div>

<p>The <code>oneOf</code> method creates a generator that randomly picks one of its
parameters each time it generates a value. Notice that plain values are
implicitly converted to generators (which always generates that value) if
needed.</p>

<p>The distribution is uniform, but if you want to control it you can use the
<code>frequency</code> combinator:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">val</span> <span class="pl-en">vowel</span> <span class="pl-k">=</span> <span class="pl-en">Gen</span>.frequency(
  (<span class="pl-c1">3</span>, <span class="pl-c1">'A'</span>),
  (<span class="pl-c1">4</span>, <span class="pl-c1">'E'</span>),
  (<span class="pl-c1">2</span>, <span class="pl-c1">'I'</span>),
  (<span class="pl-c1">3</span>, <span class="pl-c1">'O'</span>),
  (<span class="pl-c1">1</span>, <span class="pl-c1">'U'</span>),
  (<span class="pl-c1">1</span>, <span class="pl-c1">'Y'</span>)
)</pre></div>

<p>Now, the <code>vowel</code> generator will generate E:s more often than Y:s. Roughly, 4/14
of the values generated will be E:s, and 1/14 of them will be Y:s.</p>

<p><strong>Generating Case Classes</strong></p>

<p>It is very simple to generate random instances of case classes in ScalaCheck.
Consider the following example where a binary integer tree is generated:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">sealed</span> <span class="pl-k">abstract</span> <span class="pl-k">class</span> <span class="pl-en">Tree</span>
<span class="pl-k">case</span> <span class="pl-k">class</span> <span class="pl-en">Node</span>(<span class="pl-v">left</span>: <span class="pl-en">Tree</span>, <span class="pl-v">right</span>: <span class="pl-en">Tree</span>, <span class="pl-v">v</span>: <span class="pl-k">Int</span>) <span class="pl-k">extends</span> <span class="pl-e">Tree</span>
<span class="pl-k">case</span> <span class="pl-k">object</span> <span class="pl-en">Leaf</span> <span class="pl-k">extends</span> <span class="pl-e">Tree</span>

<span class="pl-k">import</span> <span class="pl-v">org.scalacheck.</span><span class="pl-v">_</span>
<span class="pl-k">import</span> <span class="pl-v">Gen.</span><span class="pl-v">_</span>
<span class="pl-k">import</span> <span class="pl-v">Arbitrary.</span><span class="pl-v">arbitrary</span>

<span class="pl-k">val</span> <span class="pl-en">genLeaf</span> <span class="pl-k">=</span> const(<span class="pl-en">Leaf</span>)

<span class="pl-k">val</span> <span class="pl-en">genNode</span> <span class="pl-k">=</span> <span class="pl-k">for</span> {
  v <span class="pl-k">&lt;</span><span class="pl-k">-</span> arbitrary[<span class="pl-k">Int</span>]
  left <span class="pl-k">&lt;</span><span class="pl-k">-</span> genTree
  right <span class="pl-k">&lt;</span><span class="pl-k">-</span> genTree
} <span class="pl-k">yield</span> <span class="pl-en">Node</span>(left, right, v)

<span class="pl-k">def</span> <span class="pl-en">genTree</span><span class="pl-k">:</span> <span class="pl-en">Gen</span>[<span class="pl-en">Tree</span>] <span class="pl-k">=</span> oneOf(genLeaf, genNode)</pre></div>

<p>We can now generate a sample tree:</p>

<pre><code>scala&gt; genTree.sample
res0: Option[Tree] = Some(Node(Leaf,Node(Node(Node(Node(Node(Node(Leaf,Leaf,-71),Node(Leaf,Leaf,-49),17),Leaf,-20),Leaf,-7),Node(Node(Leaf,Leaf,26),Leaf,-3),49),Leaf,84),-29))
</code></pre>

<p><strong>Sized Generators</strong></p>

<p>When ScalaCheck uses a generator to generate a value, it feeds it with some
parameters. One of the parameters the generator is given, is a <em>size</em> value,
which some generators use to generate their values. If you want to use the size
parameter in your own generator, you can use the <code>Gen.sized</code> method:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">def</span> <span class="pl-en">matrix</span>[<span class="pl-en">T</span>](<span class="pl-v">g</span>: <span class="pl-en">Gen</span>[<span class="pl-en">T</span>])<span class="pl-k">:</span> <span class="pl-en">Gen</span>[<span class="pl-en">Seq</span>[<span class="pl-en">Seq</span>[<span class="pl-en">T</span>]]] <span class="pl-k">=</span> <span class="pl-en">Gen</span>.sized { size <span class="pl-k">=&gt;</span>
  <span class="pl-k">val</span> <span class="pl-en">side</span> <span class="pl-k">=</span> scala.math.sqrt(size).<span class="pl-c1">asInstanceOf</span>[<span class="pl-k">Int</span>]
  <span class="pl-en">Gen</span>.listOfN(side, <span class="pl-en">Gen</span>.listOfN(side, g))
}</pre></div>

<p>The <code>matrix</code> generator will use a given generator and create a matrix which
side is based on the generator size parameter. It uses the <code>Gen.listOfN</code> which
creates a sequence of given length filled with values obtained from the given
generator.</p>

<p><strong>Conditional Generators</strong></p>

<p>Conditional generators can be defined using <code>Gen.suchThat</code> in the following
way:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">val</span> <span class="pl-en">smallEvenInteger</span> <span class="pl-k">=</span> <span class="pl-en">Gen</span>.choose(<span class="pl-c1">0</span>,<span class="pl-c1">200</span>) suchThat (_ <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">==</span> <span class="pl-c1">0</span>)</pre></div>

<p>Conditional generators works just like conditional properties, in the sense
that if the condition is too hard, ScalaCheck might not be able to generate
enough values, and it might report a property test as undecided. The
<code>smallEvenInteger</code> definition is probably OK, since it will only throw away
half of the generated numbers, but one has to be careful when using the
<code>suchThat</code> operator.</p>

<p><strong>Generating Containers</strong></p>

<p>There is a special generator, <code>Gen.containerOf</code>, that generates containers such
as lists and arrays. They take another generator as argument, that is
responsible for generating the individual items. You can use it in the
following way:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">val</span> <span class="pl-en">genIntList</span>      <span class="pl-k">=</span> <span class="pl-en">Gen</span>.containerOf[<span class="pl-en">List</span>,<span class="pl-k">Int</span>](<span class="pl-en">Gen</span>.oneOf(<span class="pl-c1">1</span>, <span class="pl-c1">3</span>, <span class="pl-c1">5</span>))

<span class="pl-k">val</span> <span class="pl-en">genStringStream</span> <span class="pl-k">=</span> <span class="pl-en">Gen</span>.containerOf[<span class="pl-en">Stream</span>,<span class="pl-k">String</span>](<span class="pl-en">Gen</span>.alphaStr)

<span class="pl-k">val</span> <span class="pl-en">genBoolArray</span>    <span class="pl-k">=</span> <span class="pl-en">Gen</span>.containerOf[<span class="pl-en">Array</span>,<span class="pl-k">Boolean</span>](<span class="pl-c1">true</span>)</pre></div>

<p>By default, ScalaCheck supports generation of <code>List</code>, <code>Stream</code>, <code>Set</code>, <code>Array</code>,
and <code>ArrayList</code> (from <code>java.util</code>). You can add support for additional
containers by adding implicit <code>Buildable</code> instances. See <code>Buildable.scala</code> for
examples.</p>

<p>There is also <code>Gen.nonEmptyContainerOf</code> for generating non-empty containers, and
<code>Gen.containerOfN</code> for generating containers of a given size.</p>

<p><strong>The <code>arbitrary</code> Generator</strong></p>

<p>There is a special generator, <code>org.scalacheck.Arbitrary.arbitrary</code>, which
generates arbitrary values of any supported type.</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">val</span> <span class="pl-en">evenInteger</span> <span class="pl-k">=</span> <span class="pl-en">Arbitrary</span>.arbitrary[<span class="pl-k">Int</span>] suchThat (_ <span class="pl-k">%</span> <span class="pl-c1">2</span> <span class="pl-k">==</span> <span class="pl-c1">0</span>)

<span class="pl-k">val</span> <span class="pl-en">squares</span> <span class="pl-k">=</span> <span class="pl-k">for</span> {
  xs <span class="pl-k">&lt;</span><span class="pl-k">-</span> <span class="pl-en">Arbitrary</span>.arbitrary[<span class="pl-en">List</span>[<span class="pl-k">Int</span>]]
} <span class="pl-k">yield</span> xs.map(x <span class="pl-k">=&gt;</span> x<span class="pl-k">*</span>x)</pre></div>

<p>The <code>arbitrary</code> generator is the generator used by ScalaCheck when it generates
values for property parameters. Most of the times, you have to supply the type
of the value to <code>arbitrary</code>, like above, since Scala often can't infer the type
automatically. You can use <code>arbitrary</code> for any type that has an implicit
<code>Arbitrary</code> instance. As mentioned earlier, ScalaCheck has default support for
common types, but it is also possible to define your own implicit <code>Arbitrary</code>
instances for unsupported types. See the following implicit <code>Arbitrary</code>
definition for booleans, that comes from the ScalaCheck implementation.</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">implicit</span> <span class="pl-k">lazy</span> <span class="pl-k">val</span> <span class="pl-en">arbBool</span><span class="pl-k">:</span> <span class="pl-en">Arbitrary</span>[<span class="pl-k">Boolean</span>] <span class="pl-k">=</span> <span class="pl-en">Arbitrary</span>(oneOf(<span class="pl-c1">true</span>, <span class="pl-c1">false</span>))</pre></div>

<p>To get support for your own type <code>T</code> you need to define an implicit <code>def</code> or
<code>val</code> of type <code>Arbitrary[T]</code>. Use the factory method <code>Arbitrary(...)</code> to create
the <code>Arbitrary</code> instance. This method takes one parameter of type <code>Gen[T]</code> and
returns an instance of <code>Arbitrary[T]</code>.</p>

<p>Now, lets say you have a custom type <code>Tree[T]</code> that you want to use as a
parameter in your properties:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">abstract</span> <span class="pl-k">sealed</span> <span class="pl-k">class</span> <span class="pl-en">Tree</span>[<span class="pl-en">T</span>] {
  <span class="pl-k">def</span> <span class="pl-en">merge</span>(<span class="pl-v">t</span>: <span class="pl-en">Tree</span>[<span class="pl-en">T</span>]) <span class="pl-k">=</span> <span class="pl-en">Internal</span>(<span class="pl-en">List</span>(<span class="pl-v">this</span>, t))

  <span class="pl-k">def</span> <span class="pl-en">size</span><span class="pl-k">:</span> <span class="pl-k">Int</span> <span class="pl-k">=</span> <span class="pl-v">this</span> <span class="pl-k">match</span> {
    <span class="pl-k">case</span> <span class="pl-en">Leaf</span>(_) <span class="pl-k">=&gt;</span> <span class="pl-c1">1</span>
    <span class="pl-k">case</span> <span class="pl-en">Internal</span>(children) <span class="pl-k">=&gt;</span> (children <span class="pl-k">:</span>\ <span class="pl-c1">0</span>) (_.size <span class="pl-k">+</span> _)
  }
}

<span class="pl-k">case</span> <span class="pl-k">class</span> <span class="pl-en">Internal</span>[<span class="pl-en">T</span>](<span class="pl-v">children</span>: <span class="pl-en">Seq</span>[<span class="pl-en">Tree</span>[<span class="pl-en">T</span>]]) <span class="pl-k">extends</span> <span class="pl-e">Tree</span>[<span class="pl-en">T</span>]

<span class="pl-k">case</span> <span class="pl-k">class</span> <span class="pl-en">Leaf</span>[<span class="pl-en">T</span>](<span class="pl-v">elem</span>: <span class="pl-en">T</span>) <span class="pl-k">extends</span> <span class="pl-e">Tree</span>[<span class="pl-en">T</span>]</pre></div>

<p>When you specify an implicit generator for your type <code>Tree[T]</code>, you also have
to assume that there exists an implicit generator for the type <code>T</code>. You do this
by specifying an implicit parameter of type <code>Arbitrary[T]</code>, so you can use the
generator <code>arbitrary[T]</code>.</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">implicit</span> <span class="pl-k">def</span> <span class="pl-en">arbTree</span>[<span class="pl-en">T</span>](<span class="pl-k">implicit</span> <span class="pl-v">a</span>: <span class="pl-en">Arbitrary</span>[<span class="pl-en">T</span>])<span class="pl-k">:</span> <span class="pl-en">Arbitrary</span>[<span class="pl-en">Tree</span>[<span class="pl-en">T</span>]] <span class="pl-k">=</span>
<span class="pl-en">Arbitrary</span> {
  <span class="pl-k">val</span> <span class="pl-en">genLeaf</span> <span class="pl-k">=</span> <span class="pl-k">for</span>(e <span class="pl-k">&lt;</span><span class="pl-k">-</span> <span class="pl-en">Arbitrary</span>.arbitrary[<span class="pl-en">T</span>]) <span class="pl-k">yield</span> <span class="pl-en">Leaf</span>(e)

  <span class="pl-k">def</span> <span class="pl-en">genInternal</span>(<span class="pl-v">sz</span>: <span class="pl-k">Int</span>)<span class="pl-k">:</span> <span class="pl-en">Gen</span>[<span class="pl-en">Tree</span>[<span class="pl-en">T</span>]] <span class="pl-k">=</span> <span class="pl-k">for</span> {
    n <span class="pl-k">&lt;</span><span class="pl-k">-</span> <span class="pl-en">Gen</span>.choose(sz<span class="pl-k">/</span><span class="pl-c1">3</span>, sz<span class="pl-k">/</span><span class="pl-c1">2</span>)
    c <span class="pl-k">&lt;</span><span class="pl-k">-</span> <span class="pl-en">Gen</span>.listOfN(n, sizedTree(sz<span class="pl-k">/</span><span class="pl-c1">2</span>))
  } <span class="pl-k">yield</span> <span class="pl-en">Internal</span>(c)

  <span class="pl-k">def</span> <span class="pl-en">sizedTree</span>(<span class="pl-v">sz</span>: <span class="pl-k">Int</span>) <span class="pl-k">=</span>
    <span class="pl-k">if</span>(sz <span class="pl-k">&lt;=</span> <span class="pl-c1">0</span>) genLeaf
    <span class="pl-k">else</span> <span class="pl-en">Gen</span>.frequency((<span class="pl-c1">1</span>, genLeaf), (<span class="pl-c1">3</span>, genInternal(sz)))

  <span class="pl-en">Gen</span>.sized(sz <span class="pl-k">=&gt;</span> sizedTree(sz))
}</pre></div>

<p>As long as the implicit <code>arbTree</code> function is in scope, you can now write
properties like this:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">val</span> <span class="pl-en">propMergeTree</span> <span class="pl-k">=</span> forAll( (<span class="pl-v">t1</span>: <span class="pl-en">Tree</span>[<span class="pl-k">Int</span>], <span class="pl-v">t2</span>: <span class="pl-en">Tree</span>[<span class="pl-k">Int</span>]) <span class="pl-k">=&gt;</span>
  t1.size <span class="pl-k">+</span> t2.size <span class="pl-k">==</span> t1.merge(t2).size</pre></div>

<p><strong>Collecting Generated Test Data</strong></p>

<p>It is possible to collect statistics about what kind of test data that has been
generated during property evaluation. This is useful if you want to inspect the
test case distribution, and make sure your property tests all different kinds
of cases, not just trivial ones.</p>

<p>For example, you might have a method that operates on lists, and which behaves
differently if the list is sorted or not. Then it is crucial to know if
ScalaCheck tests the method with both sorted and unsorted lists. Let us first
define an <code>ordered</code> method to help us state the property.</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">def</span> <span class="pl-en">ordered</span>(<span class="pl-v">l</span>: <span class="pl-en">List</span>[<span class="pl-k">Int</span>]) <span class="pl-k">=</span> l <span class="pl-k">==</span> l.sorted</pre></div>

<p>Now state the property, using <code>Prop.classify</code> to collect interesting
information on the generated data. The property itself is not very exciting in
this example, we just state that a double reverse should return the original
list.</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.Prop.</span><span class="pl-v">_</span>

<span class="pl-k">val</span> <span class="pl-en">myProp</span> <span class="pl-k">=</span> forAll { <span class="pl-v">l</span>: <span class="pl-en">List</span>[<span class="pl-k">Int</span>] <span class="pl-k">=&gt;</span>
  classify(ordered(l), <span class="pl-s"><span class="pl-pds">"</span>ordered<span class="pl-pds">"</span></span>) {
    classify(l.length <span class="pl-k">&gt;</span> <span class="pl-c1">5</span>, <span class="pl-s"><span class="pl-pds">"</span>large<span class="pl-pds">"</span></span>, <span class="pl-s"><span class="pl-pds">"</span>small<span class="pl-pds">"</span></span>) {
      l.reverse.reverse <span class="pl-k">==</span> l
    }
  }
}</pre></div>

<p>Check the property, and watch the statistics printed by ScalaCheck:</p>

<pre><code>scala&gt; myProp.check
+ OK, passed 100 tests.
&gt; Collected test data:
78% large
16% small, ordered
6% small
</code></pre>

<p>Here ScalaCheck tells us that the property hasn't been tested with any large
and ordered list (which is no surprise, since the lists are randomised).
Maybe we need to use a special generator that generates also large ordered
lists, if that is important for testing our method thoroughly. In this
particular case it doesn't matter, since the implementation of <code>reverse</code>
probably doesn't care about whether the list is sorted or not.</p>

<p>We can also collect data directly, using the <code>Prop.collect</code> method. In this
dummy property we just want to see if ScalaCheck distributes the generated
data evenly:</p>

<pre><code>val dummyProp = forAll(Gen.choose(1,10)) { n =&gt;
  collect(n) {
    n == n
  }
}

scala&gt; dummyProp.check
+ OK, passed 100 tests.
&gt; Collected test data:
13% 7
13% 5
12% 1
12% 6
11% 2
9% 9
9% 3
8% 10
7% 8
6% 4
</code></pre>

<p>As we can see, the frequency for each number is around 10%, which seems
reasonable.</p>

<h3><a id="user-content-test-execution" class="anchor" href="#test-execution" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Test Execution</h3>

<p>As we've seen, we can test properties or property collections by using the
<code>check</code> method. In fact, the <code>check</code> method is just a convenient way of running
<code>org.scalacheck.Test.check</code> (or <code>Test.checkProperties</code>, for property
collections).</p>

<p>The <code>Test</code> module is responsible for all test execution in ScalaCheck. It will
generate the arguments and evaluate the properties, repeatedly with larger and
larger test data (by increasing the <em>size</em> parameter used by the generators).
If it doesn't manage to find a failing test case after a certain number of
tests, it reports a property as passed.</p>

<p>The <code>check</code> method looks like this:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">def</span> <span class="pl-en">check</span>(<span class="pl-v">params</span>: <span class="pl-en">Test</span>.<span class="pl-en">Parameters</span>, <span class="pl-v">p</span>: <span class="pl-en">Prop</span>)<span class="pl-k">:</span> <span class="pl-en">Test</span>.<span class="pl-en">Result</span></pre></div>

<p><code>Test.Parameters</code> is a trait that encapsulates testing parameters such as the
number of times a property should be tested, the size bounds of the test data,
and how many times ScalaCheck should try if it fails to generate arguments.
There are also field for callbacks in the <code>Parameters</code> record, if you need to
get feedback from the test runner programmatically.</p>

<p>The <code>check</code> method returns an instance of <code>Test.Result</code> which encapsulates
the result and some statistics of the property test. <code>Test.Result.status</code> is of
the type <code>Test.Status</code> and can have the following values:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-c">/** ScalaCheck found enough cases for which the property holds, so the</span>
<span class="pl-c"> *  property is considered correct. (It is not proved correct, though). */</span>
<span class="pl-k">case</span> <span class="pl-k">object</span> <span class="pl-en">Passed</span> <span class="pl-k">extends</span> <span class="pl-e">Status</span>

<span class="pl-c">/** ScalaCheck managed to prove the property correct */</span>
<span class="pl-k">sealed</span> <span class="pl-k">case</span> <span class="pl-k">class</span> <span class="pl-en">Proved</span>(<span class="pl-v">args</span>: <span class="pl-en">List</span>[<span class="pl-en">Arg</span>]) <span class="pl-k">extends</span> <span class="pl-e">Status</span>

<span class="pl-c">/** The property was proved wrong with the given concrete arguments.  */</span>
<span class="pl-k">sealed</span> <span class="pl-k">case</span> <span class="pl-k">class</span> <span class="pl-en">Failed</span>(<span class="pl-v">args</span>: <span class="pl-en">List</span>[<span class="pl-en">Arg</span>], <span class="pl-v">label</span>: <span class="pl-k">String</span>) <span class="pl-k">extends</span> <span class="pl-e">Status</span>

<span class="pl-c">/** The property test was exhausted, it wasn't possible to generate enough</span>
<span class="pl-c"> *  concrete arguments satisfying the preconditions to get enough passing</span>
<span class="pl-c"> *  property evaluations. */</span>
<span class="pl-k">case</span> <span class="pl-k">object</span> <span class="pl-en">Exhausted</span> <span class="pl-k">extends</span> <span class="pl-e">Status</span>

<span class="pl-c">/** An exception was raised when trying to evaluate the property with the</span>
<span class="pl-c"> *  given concrete arguments. */</span>
<span class="pl-k">sealed</span> <span class="pl-k">case</span> <span class="pl-k">class</span> <span class="pl-en">PropException</span>(<span class="pl-v">args</span>: <span class="pl-en">List</span>[<span class="pl-en">Arg</span>], <span class="pl-v">e</span>: <span class="pl-en">Throwable</span>, <span class="pl-v">label</span>: <span class="pl-k">String</span>) <span class="pl-k">extends</span> <span class="pl-e">Status</span>

<span class="pl-c">/** An exception was raised when trying to generate concrete arguments</span>
<span class="pl-c"> *  for evaluating the property. */</span>
<span class="pl-k">sealed</span> <span class="pl-k">case</span> <span class="pl-k">class</span> <span class="pl-en">GenException</span>(<span class="pl-v">e</span>: <span class="pl-en">Throwable</span>) <span class="pl-k">extends</span> <span class="pl-e">Status</span></pre></div>

<p>The <code>checkProperties</code> returns test statistics for each property in the tested
property collection, as a list. See the API documentation for more details.</p>

<p>It is also possible to test your properties from the command line. Each
property and property collection actually has a main method that can parse the
test parameters given to it. If you provide the argument <code>-h</code>, you will get a
list of possible arguments:</p>

<pre><code>$ scala -cp scalacheck.jar MyProp -h
Incorrect options:
[1.1] failure: option name expected

-h
^

Available options:
  -workers, -w: Number of threads to execute in parallel for testing
  -minSize, -n: Minimum data generation size
  -verbosity, -v: Verbosity level
  -minSuccessfulTests, -s: Number of tests that must succeed in order to pass a property
  -maxDiscardRatio, -r: The maximum ratio between discarded and succeeded tests allowed before ScalaCheck stops testing a property. At least minSuccessfulTests will always be tested, though.
  -maxSize, -x: Maximum data generation size
</code></pre>

<p>These command line arguments can also be used in SBT to tweak ScalaCheck's
testing parameters when you run ScalaCheck tests through SBT. See SBT's
documentation for info on how to provide the arguments.</p>

<h3><a id="user-content-test-case-minimisation" class="anchor" href="#test-case-minimisation" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Test Case Minimisation</h3>

<p>One interesting feature of ScalaCheck is that if it finds an argument that
falsifies a property, it tries to <em>minimise</em> that argument before it is
reported. This is done automatically when you use the <code>Prop.property</code> and
<code>Prop.forAll</code> methods to create properties, but not if you use
<code>Prop.forAllNoShrink</code>. Let's look at the difference between these methods, by
specifying a property that says that no list has duplicate elements in it. This
is of course not true, but we want to see the test case minimisation in action!</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.Arbitrary.</span><span class="pl-v">arbitrary</span>
<span class="pl-k">import</span> <span class="pl-v">org.scalacheck.Prop.</span>{<span class="pl-v">forAll</span>, <span class="pl-v">forAllNoShrink</span>}

<span class="pl-k">val</span> <span class="pl-en">p1</span> <span class="pl-k">=</span> forAllNoShrink(arbitrary[<span class="pl-en">List</span>[<span class="pl-k">Int</span>]])(l <span class="pl-k">=&gt;</span> l <span class="pl-k">==</span> l.distinct)

<span class="pl-k">val</span> <span class="pl-en">p2</span> <span class="pl-k">=</span> forAll(arbitrary[<span class="pl-en">List</span>[<span class="pl-k">Int</span>]])(l <span class="pl-k">=&gt;</span> l <span class="pl-k">==</span> l.distinct)

<span class="pl-k">val</span> <span class="pl-en">p3</span> <span class="pl-k">=</span> forAll( (<span class="pl-v">l</span>: <span class="pl-en">List</span>[<span class="pl-k">Int</span>]) <span class="pl-k">=&gt;</span> l <span class="pl-k">==</span> l.distinct )</pre></div>

<p>Now, run the tests:</p>

<pre><code>scala&gt; p1.check
! Falsified after 11 passed tests:
&gt; ARG_0 = "List(8, 0, -1, -3, -8, 8, 2, -10, 9, 1, -8)"

scala&gt; p2.check
! Falsified after 4 passed tests:
&gt; ARG_0 = "List(-1, -1)" (2 shrinks)

scala&gt; p3.check
! Falsified after 7 passed tests:
&gt; ARG_0 = "List(-5, -5)" (3 shrinks)
</code></pre>

<p>In all cases, ScalaCheck found a list with duplicate elements that falsified
the property. However, in the two second cases the list was shrunk into a list
with just two identical elements in it, which is the minimal failing test case
for the given property. Clearly, it's much easier to find a bug if you are
given a simple test case that causes the failure.</p>

<p>Just as you can define implicit <code>Arbitrary</code> generators for your own types, you
can also define default shrinking methods. This is done by defining an implicit
method that returns a <code>Shrink[T]</code> instance. This is done by using the
<code>Shrink(...)</code> factory method, which as its only parameter takes a function and
returns an instance of <code>Shrink[T]</code>. In turn, the function should take a value
of the given type <code>T</code>, and return a <code>Stream</code> of shrank variants of the given
value. As an example, look at the implicit <code>Shrink</code> instance for a tuple as it
is defined in ScalaCheck:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-c">/** Shrink instance of 2-tuple */</span>
<span class="pl-k">implicit</span> <span class="pl-k">def</span> <span class="pl-en">shrinkTuple2</span>[<span class="pl-en">T1</span>,<span class="pl-en">T2</span>](<span class="pl-k">implicit</span> <span class="pl-v">s1</span>: <span class="pl-en">Shrink</span>[<span class="pl-en">T1</span>], <span class="pl-v">s2</span>: <span class="pl-en">Shrink</span>[<span class="pl-en">T2</span>]
)<span class="pl-k">:</span> <span class="pl-en">Shrink</span>[(<span class="pl-en">T1</span>,<span class="pl-en">T2</span>)] <span class="pl-k">=</span> <span class="pl-en">Shrink</span> { <span class="pl-k">case</span> (t1,t2) <span class="pl-k">=&gt;</span>
  (<span class="pl-k">for</span>(x1 <span class="pl-k">&lt;</span><span class="pl-k">-</span> shrink(t1)) <span class="pl-k">yield</span> (x1, t2)) append
  (<span class="pl-k">for</span>(x2 <span class="pl-k">&lt;</span><span class="pl-k">-</span> shrink(t2)) <span class="pl-k">yield</span> (t1, x2))
}</pre></div>

<p>When implementing a shrinking method, one has to be careful to only return
<em>smaller</em> variants of the value, since the shrinking algorithm otherwise could
loop. ScalaCheck has implicit shrinking methods for common types such as integers
and lists.</p>

<h3><a id="user-content-stateful-testing" class="anchor" href="#stateful-testing" aria-hidden="true"><svg aria-hidden="true" class="octicon octicon-link" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Stateful Testing</h3>

<p>We have described how ScalaCheck can be used to state properties about
isolated units of your code (usually methods), and how such
properties can be tested in an automated fashion. However, sometimes you want
to not only specify how a method should behave on its own, but also how a
collection of methods should behave together, when used as an interface to a
larger system. You want to specify how the methods - or <em>commands</em> - affect the
system's <em>state</em> throughout time.</p>

<p>An example could be to specify the workflow of an ATM. You'd want to state
requirements such as that the user has to enter the correct PIN code before any
money could be withdrawn, or that entering an erronous PIN code three times
would make the machine confiscate the credit card.</p>

<p>Formalising such command sequences using ScalaCheck's property combinators is a
bit tricky. Instead, there is a small library in
<code>org.scalacheck.commands.Commands</code> for modelling commands and specifying
conditions about them, which can then be used just as ordinary ScalaCheck
properties, and tested with the <code>org.scalacheck.Test</code> module.</p>

<p>Let us now assume we want to test the following trivial counter class:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">class</span> <span class="pl-en">Counter</span> {
  <span class="pl-k">private</span> <span class="pl-k">var</span> <span class="pl-en">n</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>
  <span class="pl-k">def</span> <span class="pl-en">inc</span> <span class="pl-k">=</span> n <span class="pl-k">+</span><span class="pl-k">=</span> <span class="pl-c1">1</span>
  <span class="pl-k">def</span> <span class="pl-en">dec</span> <span class="pl-k">=</span> n <span class="pl-k">-</span><span class="pl-k">=</span> <span class="pl-c1">1</span>
  <span class="pl-k">def</span> <span class="pl-en">get</span> <span class="pl-k">=</span> n
  <span class="pl-k">def</span> <span class="pl-en">reset</span> <span class="pl-k">=</span> n <span class="pl-k">=</span> <span class="pl-c1">0</span>
}</pre></div>

<p><code>Counter</code> is the type of our system under test. ScalaCheck supports testing
systems in parallel (multiple instances of the system under test), or
sequentially (a singleton system). In both cases, the system under test is
represented by the abstract type <code>Commands.Sut</code>. In our example, the type <code>Sut</code>
will be set to <code>Counter</code>.</p>

<p>We will also need a type encoding the state of the system under test. This is
represented by the abstract type <code>Commands.State</code>. The <code>State</code> type should
describe enough of the actual system's state for us to be able to define
properties about the various commands. In our case we will set <code>State = Int</code>,
and this actually models the real system state exactly. This is a coincidence
caused by the simplicity of our <code>Counter</code> implementation. A realistic system
would probably have other internal state that we wouldn't need (or even know
how) to implement in our abstract representation of the state.</p>

<p>Finally, the commands are modelled by implementing the <code>Commands.Command</code> type.
An example will make it easier to understand. We will model the commands <code>inc</code>,
<code>dec</code>, <code>get</code> and <code>reset</code>. The scaladoc comments are inlined in the example
below to help you out:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">import</span> <span class="pl-v">org.scalacheck.commands.</span><span class="pl-v">Commands</span>
<span class="pl-k">import</span> <span class="pl-v">org.scalacheck.</span><span class="pl-v">Gen</span>
<span class="pl-k">import</span> <span class="pl-v">org.scalacheck.</span><span class="pl-v">Prop</span>
<span class="pl-k">import</span> <span class="pl-v">scala.util.</span>{<span class="pl-v">Try</span>, <span class="pl-v">Success</span>}

<span class="pl-k">object</span> <span class="pl-en">CounterSpecification</span> <span class="pl-k">extends</span> <span class="pl-e">Commands</span> {

  <span class="pl-k">type</span> <span class="pl-en">State</span> <span class="pl-k">=</span> <span class="pl-k">Int</span>

  <span class="pl-k">type</span> <span class="pl-en">Sut</span> <span class="pl-k">=</span> <span class="pl-en">Counter</span>

<span class="pl-c">  /** Decides if [[<span class="pl-e">newSut</span>]] should be allowed to be called</span>
<span class="pl-c">   *  with the specified state instance. This can be used to limit the number</span>
<span class="pl-c">   *  of co-existing [[<span class="pl-e">Sut</span>]] instances. The list of existing states represents</span>
<span class="pl-c">   *  the initial states (not the current states) for all [[<span class="pl-e">Sut</span>]] instances</span>
<span class="pl-c">   *  that are active for the moment. If this method is implemented</span>
<span class="pl-c">   *  incorrectly, for example if it returns false even if the list of</span>
<span class="pl-c">   *  existing states is empty, ScalaCheck might hang.</span>
<span class="pl-c">   *</span>
<span class="pl-c">   *  If you want to allow only one [[<span class="pl-e">Sut</span>]] instance to exist at any given time</span>
<span class="pl-c">   *  (a singleton [[<span class="pl-e">Sut</span>]]), implement this method the following way:</span>
<span class="pl-c">   *</span>
<span class="pl-c">   *  {{{</span>
<span class="pl-c">   *  def canCreateNewSut(newState: State, initSuts: Traversable[State]</span>
<span class="pl-c">   *    runningSuts: Traversable[Sut]</span>
<span class="pl-c">   *  ) = {</span>
<span class="pl-c">   *    initSuts.isEmpty &amp;&amp; runningSuts.isEmpty</span>
<span class="pl-c">   *  }</span>
<span class="pl-c">   *  }}}</span>
<span class="pl-c">   */</span>
  <span class="pl-k">def</span> <span class="pl-en">canCreateNewSut</span>(<span class="pl-v">newState</span>: <span class="pl-en">State</span>, <span class="pl-v">initSuts</span>: <span class="pl-en">Traversable</span>[<span class="pl-en">State</span>],
    <span class="pl-v">runningSuts</span>: <span class="pl-en">Traversable</span>[<span class="pl-en">Sut</span>])<span class="pl-k">:</span> <span class="pl-k">Boolean</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>

<span class="pl-c">  /** The precondition for the initial state, when no commands yet have</span>
<span class="pl-c">   *  run. This is used by ScalaCheck when command sequences are shrinked</span>
<span class="pl-c">   *  and the first state might differ from what is returned from</span>
<span class="pl-c">   *  [[<span class="pl-e">genInitialState</span>]]. */</span>
  <span class="pl-k">def</span> <span class="pl-en">initialPreCondition</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-k">Boolean</span> <span class="pl-k">=</span> {
    <span class="pl-c">// Since the counter implementation doesn't allow initialisation with an</span>
    <span class="pl-c">// arbitrary number, we can only start from zero</span>
    state <span class="pl-k">==</span> <span class="pl-c1">0</span>
  }

<span class="pl-c">  /** Create a new [[<span class="pl-e">Sut</span>]] instance with an internal state that</span>
<span class="pl-c">   *  corresponds to the provided abstract state instance. The provided state</span>
<span class="pl-c">   *  is guaranteed to fulfill [[<span class="pl-e">initialPreCondition</span>]], and</span>
<span class="pl-c">   *  [[<span class="pl-e">newSut</span>]] will never be called if</span>
<span class="pl-c">   *  [[<span class="pl-e">canCreateNewSut</span>]] is not true for the given state. */</span>
  <span class="pl-k">def</span> <span class="pl-en">newSut</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-en">Sut</span> <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Counter</span>

<span class="pl-c">  /** Destroy the system represented by the given [[<span class="pl-e">Sut</span>]]</span>
<span class="pl-c">   *  instance, and release any resources related to it. */</span>
  <span class="pl-k">def</span> <span class="pl-en">destroySut</span>(<span class="pl-v">sut</span>: <span class="pl-en">Sut</span>)<span class="pl-k">:</span> <span class="pl-k">Unit</span> <span class="pl-k">=</span> ()

<span class="pl-c">  /** A generator that should produce an initial [[<span class="pl-e">State</span>]] instance that is</span>
<span class="pl-c">   *  usable by [[<span class="pl-e">newSut</span>]] to create a new system under test.</span>
<span class="pl-c">   *  The state returned by this generator is always checked with the</span>
<span class="pl-c">   *  [[<span class="pl-e">initialPreCondition</span>]] method before it is used. */</span>
  <span class="pl-k">def</span> <span class="pl-en">genInitialState</span><span class="pl-k">:</span> <span class="pl-en">Gen</span>[<span class="pl-en">State</span>] <span class="pl-k">=</span> <span class="pl-en">Gen</span>.const(<span class="pl-c1">0</span>)

<span class="pl-c">  /** A generator that, given the current abstract state, should produce</span>
<span class="pl-c">   *  a suitable Command instance. */</span>
  <span class="pl-k">def</span> <span class="pl-en">genCommand</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-en">Gen</span>[<span class="pl-en">Command</span>] <span class="pl-k">=</span> <span class="pl-en">Gen</span>.oneOf(
    <span class="pl-en">Inc</span>, <span class="pl-en">Get</span>, <span class="pl-en">Dec</span>, <span class="pl-en">Reset</span>
  )

  <span class="pl-c">// A UnitCommand is a command that doesn't produce a result</span>
  <span class="pl-k">case</span> <span class="pl-k">object</span> <span class="pl-en">Inc</span> <span class="pl-k">extends</span> <span class="pl-e">UnitCommand</span> {
    <span class="pl-k">def</span> <span class="pl-en">run</span>(<span class="pl-v">sut</span>: <span class="pl-en">Sut</span>)<span class="pl-k">:</span> <span class="pl-k">Unit</span> <span class="pl-k">=</span> sut.inc

    <span class="pl-k">def</span> <span class="pl-en">nextState</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-en">State</span> <span class="pl-k">=</span> state <span class="pl-k">+</span> <span class="pl-c1">1</span>

    <span class="pl-c">// This command has no preconditions</span>
    <span class="pl-k">def</span> <span class="pl-en">preCondition</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-k">Boolean</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>

    <span class="pl-c">// This command should always succeed (never throw an exception)</span>
    <span class="pl-k">def</span> <span class="pl-en">postCondition</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>, <span class="pl-v">success</span>: <span class="pl-k">Boolean</span>)<span class="pl-k">:</span> <span class="pl-en">Prop</span> <span class="pl-k">=</span> success
  }

  <span class="pl-k">case</span> <span class="pl-k">object</span> <span class="pl-en">Dec</span> <span class="pl-k">extends</span> <span class="pl-e">UnitCommand</span> {
    <span class="pl-k">def</span> <span class="pl-en">run</span>(<span class="pl-v">sut</span>: <span class="pl-en">Sut</span>)<span class="pl-k">:</span> <span class="pl-k">Unit</span> <span class="pl-k">=</span> sut.dec
    <span class="pl-k">def</span> <span class="pl-en">nextState</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-en">State</span> <span class="pl-k">=</span> state <span class="pl-k">-</span> <span class="pl-c1">1</span>
    <span class="pl-k">def</span> <span class="pl-en">preCondition</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-k">Boolean</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>
    <span class="pl-k">def</span> <span class="pl-en">postCondition</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>, <span class="pl-v">success</span>: <span class="pl-k">Boolean</span>)<span class="pl-k">:</span> <span class="pl-en">Prop</span> <span class="pl-k">=</span> success
  }

  <span class="pl-k">case</span> <span class="pl-k">object</span> <span class="pl-en">Reset</span> <span class="pl-k">extends</span> <span class="pl-e">UnitCommand</span> {
    <span class="pl-k">def</span> <span class="pl-en">run</span>(<span class="pl-v">sut</span>: <span class="pl-en">Sut</span>)<span class="pl-k">:</span> <span class="pl-k">Unit</span> <span class="pl-k">=</span> sut.reset
    <span class="pl-k">def</span> <span class="pl-en">nextState</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-en">State</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>
    <span class="pl-k">def</span> <span class="pl-en">preCondition</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-k">Boolean</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>
    <span class="pl-k">def</span> <span class="pl-en">postCondition</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>, <span class="pl-v">success</span>: <span class="pl-k">Boolean</span>)<span class="pl-k">:</span> <span class="pl-en">Prop</span> <span class="pl-k">=</span> success
  }

  <span class="pl-k">case</span> <span class="pl-k">object</span> <span class="pl-en">Get</span> <span class="pl-k">extends</span> <span class="pl-e">Command</span> {

    <span class="pl-c">// The Get command returns an Int</span>
    <span class="pl-k">type</span> <span class="pl-en">Result</span> <span class="pl-k">=</span> <span class="pl-k">Int</span>

    <span class="pl-k">def</span> <span class="pl-en">run</span>(<span class="pl-v">sut</span>: <span class="pl-en">Sut</span>)<span class="pl-k">:</span> <span class="pl-en">Result</span> <span class="pl-k">=</span> sut.get

    <span class="pl-k">def</span> <span class="pl-en">nextState</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-en">State</span> <span class="pl-k">=</span> state

    <span class="pl-k">def</span> <span class="pl-en">preCondition</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>)<span class="pl-k">:</span> <span class="pl-k">Boolean</span> <span class="pl-k">=</span> <span class="pl-c1">true</span>

    <span class="pl-c">// The post condition verifies that the result we get back from the</span>
    <span class="pl-c">// actual system corresponds to our model of the state</span>
    <span class="pl-k">def</span> <span class="pl-en">postCondition</span>(<span class="pl-v">state</span>: <span class="pl-en">State</span>, <span class="pl-v">result</span>: <span class="pl-en">Try</span>[<span class="pl-en">Result</span>])<span class="pl-k">:</span> <span class="pl-en">Prop</span> <span class="pl-k">=</span> {
      result <span class="pl-k">==</span> <span class="pl-en">Success</span>(state)
    }
  }
}</pre></div>

<p>Now we can test our <code>Counter</code> implementation. The <code>Commands</code> trait has a method
called <code>property</code> that returns a <code>Prop</code> instance that allows us to treat our
stateful system specification as an ordinary ScalaCheck property.</p>

<pre><code>scala&gt; CounterSpecification.property().check
+ OK, passed 100 tests.
</code></pre>

<p>OK, our implementation seems to work. But let us introduce a bug:</p>

<div class="highlight highlight-source-scala"><pre><span class="pl-k">class</span> <span class="pl-en">Counter</span> {
  <span class="pl-k">private</span> <span class="pl-k">var</span> <span class="pl-en">n</span> <span class="pl-k">=</span> <span class="pl-c1">0</span>
  <span class="pl-k">def</span> <span class="pl-en">inc</span> <span class="pl-k">=</span> n <span class="pl-k">+</span><span class="pl-k">=</span> <span class="pl-c1">1</span>
  <span class="pl-k">def</span> <span class="pl-en">dec</span> <span class="pl-k">=</span> <span class="pl-k">if</span>(n <span class="pl-k">&gt;</span> <span class="pl-c1">3</span>) n <span class="pl-k">-</span><span class="pl-k">=</span> <span class="pl-c1">2</span> <span class="pl-k">else</span> n <span class="pl-k">-</span><span class="pl-k">=</span> <span class="pl-c1">1</span>  <span class="pl-c">// Bug!</span>
  <span class="pl-k">def</span> <span class="pl-en">get</span> <span class="pl-k">=</span> n
  <span class="pl-k">def</span> <span class="pl-en">reset</span> <span class="pl-k">=</span> n <span class="pl-k">=</span> <span class="pl-c1">0</span>
}</pre></div>

<p>Lets test it again:</p>

<pre><code>scala&gt; CounterSpecification.property().check
! Falsified after 64 passed tests.
&gt; Labels of failing property:
initialstate = 0
seqcmds = (Inc; Inc; Inc; Inc; Dec; Get =&gt; 2)
&gt; ARG_0: Actions(0,List(Inc, Inc, Inc, Inc, Dec, Get),List())
&gt; ARG_0_ORIGINAL: Actions(0,List(Inc, Dec, Inc, Get, Inc, Inc, Inc, Dec, In
  c, Get, Dec, Dec, Inc, Dec, Dec, Get, Get, Inc, Dec, Reset, Reset, Dec, D
  ec, Dec, Get, Inc, Reset, Dec, Get, Dec, Dec, Get, Dec, Get, Inc, Reset,
  Dec, Inc, Reset, Get, Get, Reset, Inc, Reset, Dec, Inc, Dec, Dec, Get, In
  c, Inc, Reset, Get, Get, Inc, Dec, Dec, Dec, Reset, Get, Inc, Dec, Dec, I
  nc),List())
</code></pre>

<p>ScalaCheck found a failing command sequence (after testing 64 good ones), and
then shrank it down. The resulting command sequence is indeed the minimal
failing one! There is no other less complex command sequence that could have
discovered the bug. This is a very powerful feature when testing complicated
command sequences, where bugs may occur after a very specific sequence of
commands that is hard to come up with when doing manual tests.</p>

<p>You can find more examples of stateful specifications in the
<a href="https://github.com/rickynils/scalacheck/tree/master/examples">examples</a>
directory in the ScalaCheck repository. The
<a href="http://scalacheck.org/files/scaladays2014/index.html">slides</a> from the
ScalaDays 2014 presentation about stateful testing in ScalaCheck are also
helpful.</p>
</article>
  </div>

</div>

<button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
<div id="jump-to-line" style="display:none">
  <!-- </textarea> --><!-- '"` --><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>


    </div>
  </div>

    </div>

        <div class="container site-footer-container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2016 <span title="0.15911s from github-fe145-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



    

    <div id="ajax-error-message" class="ajax-error-message flash flash-error">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"></path></svg>
      <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
        <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
      </button>
      You can't perform that action at this time.
    </div>


      
      <script crossorigin="anonymous" integrity="sha256-/aDmtqOGTfhkQEghgmYxGQ2NYJnAyvvdwj9kvaZzGaY=" src="https://assets-cdn.github.com/assets/frameworks-fda0e6b6a3864df864404821826631190d8d6099c0cafbddc23f64bda67319a6.js"></script>
      <script async="async" crossorigin="anonymous" integrity="sha256-ZNByud5cS7lMG3y8PZjEQ8CzV0URr9x7T3r8F35vifM=" src="https://assets-cdn.github.com/assets/github-64d072b9de5c4bb94c1b7cbc3d98c443c0b3574511afdc7b4f7afc177e6f89f3.js"></script>
      
      
      
      
      
      
    <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"></path></svg>
      <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
      <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
    </div>
    <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"></path></svg>
    </button>
  </div>
</div>

  </body>
</html>

